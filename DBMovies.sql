/*=================================================================*/
  CREATE DATABASE "C:\Users\Minev\Desktop\IBMOVIES.gdb"
             user "SYSDBA"
         password "masterkey"
         page_size=4096;
/*=================================================================*/
CREATE TABLE GENRE_TBL
(
ID INTEGER NOT NULL,
NAME VARCHAR(50),
PRIMARY KEY(ID)
);

CREATE TABLE DIRECTOR_TBL
(
ID INTEGER NOT NULL,
NAME VARCHAR(50),
FAM VARCHAR(50),
DESCRIPT VARCHAR(10000),
PRIMARY KEY(ID)
);

CREATE TABLE COUNTRY_TBL
(
ID INTEGER NOT NULL,
NAME VARCHAR(25),
PRIMARY KEY(ID)
);

CREATE TABLE YEAR_TBL
(
ID INTEGER NOT NULL,
YEARNUMBER INTEGER,
PRIMARY KEY(ID)
);

CREATE TABLE MOVIES_TBL
(
ID INTEGER NOT NULL,
GENRE_ID INTEGER,
DIRECTOR_ID INTEGER,
YEAR_ID INTEGER,
COUNTRY_ID INTEGER,
NAME VARCHAR(50),
DESCRIPT VARCHAR(10000),
POSTER BLOB(4096),
TRAILOR_FILENAME VARCHAR(256),
PRIMARY KEY(ID),
FOREIGN KEY(GENRE_ID) REFERENCES GENRE_TBL(ID),
FOREIGN KEY(DIRECTOR_ID) REFERENCES DIRECTOR_TBL(ID),
FOREIGN KEY(COUNTRY_ID) REFERENCES COUNTRY_TBL(ID),
FOREIGN KEY(YEAR_ID) REFERENCES YEAR_TBL(ID)
);

CREATE TABLE POSITION_TBL
(
ID INTEGER NOT NULL,
NAME VARCHAR(20),
PRIMARY KEY(ID)
);

CREATE TABLE STAFF_TBL
(
ID INTEGER NOT NULL,
POSITION_ID INTEGER,
NAME VARCHAR(50),
FAM VARCHAR(40),
UCN FLOAT(10),
ADDRESS VARCHAR(20),
USERNAME VARCHAR(30),
PASS VARCHAR(20),
PRIMARY KEY(ID),
FOREIGN KEY(POSITION_ID) REFERENCES POSITION_TBL(ID)
);

CREATE TABLE CLIENT_TBL
(
ID INTEGER NOT NULL,
NAME VARCHAR(50),
FAM VARCHAR(40),
ADDRESS VARCHAR(50),
CARDNUMBER FLOAT(10),
PRIMARY KEY(ID)
);

CREATE TABLE COMPANY_TBL
(
ID INTEGER NOT NULL,
NAME VARCHAR(30),
BULSTAT	VARCHAR(10),
ADDRESS VARCHAR(30),
PRIMARY KEY(ID)
);

CREATE TABLE INVOICE_HEAD_TBL
(
ID INTEGER NOT NULL,
STAFF_ID INTEGER,
CLIENT_ID INTEGER,
COMPANY_ID INTEGER,
INVOICENUMBER INTEGER,
INVOICEDATE DATE,
FLAG_PC CHAR(1),
FLAG_IO CHAR(1),
PRIMARY KEY(ID),
FOREIGN KEY(STAFF_ID) REFERENCES STAFF_TBL(ID),
FOREIGN KEY(CLIENT_ID) REFERENCES CLIENT_TBL(ID),
FOREIGN KEY(COMPANY_ID) REFERENCES COMPANY_TBL(ID)
);

CREATE TABLE MEASURE_TBL
(
ID INTEGER NOT NULL,
NAME VARCHAR(30),
PRIMARY KEY(ID)
);

CREATE TABLE ARTICLE_TBL
(
ID INTEGER NOT NULL,
MEASURE_ID INTEGER,
NAME VARCHAR(30),
PRICE DECIMAL(15,6),
PRIMARY KEY (ID),
FOREIGN KEY(MEASURE_ID) REFERENCES MEASURE_TBL(ID)
);

CREATE TABLE SELLS_TBL
(
ID INTEGER NOT NULL,
QUANTITY INTEGER,
ARTICLE_ID INTEGER,
INVOICE_HEAD_ID INTEGER,
PRIMARY KEY(ID),
FOREIGN KEY(ARTICLE_ID) REFERENCES ARTICLE_TBL(ID),
FOREIGN KEY(INVOICE_HEAD_ID) REFERENCES INVOICE_HEAD_TBL(ID)
);

CREATE TABLE ARTISTS_TBL
(
ID INTEGER NOT NULL, 
NAME VARCHAR(50),
FAM VARCHAR(40),
COUNTRY VARCHAR(30),
DESCRIPT VARCHAR(10000),
PRIMARY KEY (ID)
);

CREATE TABLE MOVIES_ARTISTS_TBL
(
ID INTEGER NOT NULL,
ARTISTS_ID INTEGER,
MOVIES_ID INTEGER,
PRIMARY KEY(ID),
FOREIGN KEY(ARTISTS_ID) REFERENCES ARTISTS_TBL(ID),
FOREIGN KEY(MOVIES_ID) REFERENCES MOVIES_TBL(ID)
);

CREATE TABLE LOAN_HEAD_TBL
(
ID INTEGER NOT NULL,
STAFF_ID INTEGER,
CLIENT_ID INTEGER,
COMPANY_ID INTEGER,
DATES DATE,
LOANNUMBER INTEGER,
FLAG_PC1 CHAR(1),
PRIMARY KEY(ID),
FOREIGN KEY(STAFF_ID) REFERENCES STAFF_TBL(ID),
FOREIGN KEY(CLIENT_ID) REFERENCES CLIENT_TBL(ID),
FOREIGN KEY(COMPANY_ID) REFERENCES COMPANY_TBL(ID)
);

CREATE TABLE LOAN_BODY_TBL
(
ID INTEGER NOT NULL,
MOVIES_ID INTEGER,
SELLS_ID INTEGER,
LOAN_HEAD_ID INTEGER,
DAYS INTEGER,
PRICE DECIMAL(15,6),
PRIMARY KEY(ID),
FOREIGN KEY(MOVIES_ID) REFERENCES MOVIES_TBL(ID),
FOREIGN KEY(SELLS_ID) REFERENCES SELLS_TBL(ID),
FOREIGN KEY(LOAN_HEAD_ID) REFERENCES LOAN_HEAD_TBL(ID) 
);


CREATE INDEX MOVIES_BY_NAME ON MOVIES_TBL(NAME);



/*=============================================================*/

CREATE GENERATOR GENRETBL_IDGEN;
SET GENERATOR GENRETBL_IDGEN TO 0;

CREATE GENERATOR DIRECTORTBL_IDGEN;
SET GENERATOR DIRECTORTBL_IDGEN TO 0;

CREATE GENERATOR COUNTRYTBL_IDGEN;
SET GENERATOR COUNTRYTBL_IDGEN TO 0;

CREATE GENERATOR YEARTBL_IDGEN;
SET GENERATOR YEARTBL_IDGEN TO 0;

CREATE GENERATOR MOVIESTBL_IDGEN;
SET GENERATOR MOVIESTBL_IDGEN TO 0;

CREATE GENERATOR POSITIONTBL_IDGEN;
SET GENERATOR POSITIONTBL_IDGEN TO 0;

CREATE GENERATOR STAFFTBL_IDGEN;
SET GENERATOR STAFFTBL_IDGEN TO 0;

CREATE GENERATOR CLIENTTBL_IDGEN;
SET GENERATOR CLIENTTBL_IDGEN TO 0;

CREATE GENERATOR COMPANYTBL_IDGEN;
SET GENERATOR COMPANYTBL_IDGEN TO 0;

CREATE GENERATOR INVOICE_HEADTBL_IDGEN;
SET GENERATOR INVOICE_HEADTBL_IDGEN TO 0;

CREATE GENERATOR MEASURETBL_IDGEN;
SET GENERATOR MEASURETBL_IDGEN TO 0;

CREATE GENERATOR ARTICLETBL_IDGEN;
SET GENERATOR ARTICLETBL_IDGEN TO 0;

CREATE GENERATOR SELLSTBL_IDGEN;
SET GENERATOR SELLSTBL_IDGEN TO 0;

CREATE GENERATOR ARTISTSTBL_IDGEN;
SET GENERATOR ARTISTSTBL_IDGEN TO 0;

CREATE GENERATOR MOVIES_ARTISTSTBL_IDGEN;
SET GENERATOR MOVIES_ARTISTSTBL_IDGEN TO 0;

CREATE GENERATOR LOAN_HEADTBL_IDGEN;
SET GENERATOR LOAN_HEADTBL_IDGEN TO 0;

CREATE GENERATOR LOAN_BODYTBL_IDGEN;
SET GENERATOR LOAN_BODYTBL_IDGEN TO 0;

/*===========================================================*/

SET TERM ; ^
CREATE TRIGGER GENRETBL_IDTRG
FOR GENRE_TBL
BEFORE INSERT
AS
BEGIN
NEW.ID = GEN_ID(GENRETBL_IDGEN, 1);
END^
SET TERM ^ ;

SET TERM ; ^
CREATE TRIGGER DIRECTORTBL_IDTRG
FOR DIRECTOR_TBL
BEFORE INSERT
AS
BEGIN
NEW.ID = GEN_ID(DIRECTORTBL_IDGEN, 1);
END^
SET TERM ^ ;

SET TERM ; ^
CREATE TRIGGER COUNTRYTBL_IDTRG
FOR COUNTRY_TBL
BEFORE INSERT
AS
BEGIN
NEW.ID = GEN_ID(COUNTRYTBL_IDGEN, 1);
END^
SET TERM ^ ;

SET TERM ; ^
CREATE TRIGGER YEARTBL_IDTRG
FOR YEAR_TBL
BEFORE INSERT
AS
BEGIN
NEW.ID = GEN_ID(YEARTBL_IDGEN, 1);
END^
SET TERM ^ ;

SET TERM ; ^
CREATE TRIGGER MOVIESTBL_IDTRG
FOR MOVIES_TBL
BEFORE INSERT
AS
BEGIN
NEW.ID = GEN_ID(MOVIESTBL_IDGEN, 1);
END^
SET TERM ^ ;

SET TERM ; ^
CREATE TRIGGER POSITIONTBL_IDTRG
FOR POSITION_TBL
BEFORE INSERT
AS
BEGIN
NEW.ID = GEN_ID(POSITIONTBL_IDGEN, 1);
END^
SET TERM ^ ;

SET TERM ; ^
CREATE TRIGGER STAFFTBL_IDTRG
FOR STAFF_TBL
BEFORE INSERT
AS
BEGIN
NEW.ID = GEN_ID(STAFFTBL_IDGEN, 1);
END^
SET TERM ^ ;

SET TERM ; ^
CREATE TRIGGER CLIENTTBL_IDTRG
FOR CLIENT_TBL
BEFORE INSERT
AS
BEGIN
NEW.ID = GEN_ID(CLIENTTBL_IDGEN, 1);
END^
SET TERM ^ ;

SET TERM ; ^
CREATE TRIGGER COMPANYTBL_IDTRG
FOR COMPANY_TBL
BEFORE INSERT
AS
BEGIN
NEW.ID = GEN_ID(COMPANYTBL_IDGEN, 1);
END^
SET TERM ^ ;

SET TERM ; ^
CREATE TRIGGER INVOICE_HEADTBL_IDTRG
FOR INVOICE_HEAD_TBL
BEFORE INSERT
AS
BEGIN
NEW.ID = GEN_ID(INVOICE_HEADTBL_IDGEN, 1);
END^
SET TERM ^ ;

SET TERM ; ^
CREATE TRIGGER MEASURETBL_IDTRG
FOR MEASURE_TBL
BEFORE INSERT
AS
BEGIN
NEW.ID = GEN_ID(MEASURETBL_IDGEN, 1);
END^
SET TERM ^ ;

SET TERM ; ^
CREATE TRIGGER ARTICLETBL_IDTRG
FOR ARTICLE_TBL
BEFORE INSERT
AS
BEGIN
NEW.ID = GEN_ID(ARTICLETBL_IDGEN, 1);
END^
SET TERM ^ ;

SET TERM ; ^
CREATE TRIGGER SELLSTBL_IDTRG
FOR SELLS_TBL
BEFORE INSERT
AS
BEGIN
NEW.ID = GEN_ID(SELLSTBL_IDGEN, 1);
END^
SET TERM ^ ;

SET TERM ; ^
CREATE TRIGGER ARTISTSTBL_IDTRG
FOR ARTISTS_TBL
BEFORE INSERT
AS
BEGIN
NEW.ID = GEN_ID(ARTISTSTBL_IDGEN, 1);
END^
SET TERM ^ ;

SET TERM ; ^
CREATE TRIGGER MOVIES_ARTISTSTBL_IDTRG
FOR MOVIES_ARTISTS_TBL
BEFORE INSERT
AS
BEGIN
NEW.ID = GEN_ID(MOVIES_ARTISTSTBL_IDGEN, 1);
END^
SET TERM ^ ;

SET TERM ; ^
CREATE TRIGGER LOAN_HEADTBL_IDTRG
FOR LOAN_HEAD_TBL
BEFORE INSERT
AS
BEGIN
NEW.ID = GEN_ID(LOAN_HEADTBL_IDGEN, 1);
END^
SET TERM ^ ;

SET TERM ; ^
CREATE TRIGGER LOAN_BODYTBL_IDTRG
FOR LOAN_BODY_TBL
BEFORE INSERT
AS
BEGIN
NEW.ID = GEN_ID(LOAN_BODYTBL_IDGEN, 1);
END^
SET TERM ^ ;

/*===================================================*/


SET TERM ^ ;

CREATE PROCEDURE MOVIESTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(MOVIESTBL_IDGEN, 0);
END^
SET TERM ; ^

SET TERM ^ ;

CREATE PROCEDURE GENRETBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(GENRETBL_IDGEN, 0);
END^
SET TERM ; ^


SET TERM ^ ;

CREATE PROCEDURE ARTISTSTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(ARTISTSTBL_IDGEN, 0);
END^
SET TERM ; ^

SET TERM ^ ;

CREATE PROCEDURE CLIENTTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(CLIENTTBL_IDGEN, 0);
END^
SET TERM ; ^

SET TERM ^ ;

CREATE PROCEDURE STAFFTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(STAFFTBL_IDGEN, 0);
END^
SET TERM ; ^

SET TERM ^ ;

CREATE PROCEDURE COMPANYTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(COMPANYTBL_IDGEN, 0);
END^
SET TERM ; ^

SET TERM ^ ;

CREATE PROCEDURE COUNTRYTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(COUNTRYTBL_IDGEN, 0);
END^
SET TERM ; ^

SET TERM ^ ;

CREATE PROCEDURE YEARTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(YEARTBL_IDGEN, 0);
END^
SET TERM ; ^

SET TERM ^ ;

CREATE PROCEDURE MOVIES_ARTISTSTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(MOVIES_ARTISTSTBL_IDGEN, 0);
END^
SET TERM ; ^

SET TERM ^ ;

CREATE PROCEDURE DIRECTORTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(DIRECTORTBL_IDGEN, 0);
END^
SET TERM ; ^

SET TERM ^ ;

CREATE PROCEDURE POSITIONTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(POSITIONTBL_IDGEN, 0);
END^
SET TERM ; ^



	